{% extends 'base.html.twig' %}

{% block body %}
    <div class="container card">

        <h1 class="survey-form_title">{{ survey.title }}</h1>
        <p class="survey-form_subtitle">{{ survey.description }}</p>

        {% include 'block/nav.html.twig' %}

        <div class="survey_stat-item">
            <h4>Количество ответов</h4>
            <canvas class="survey_stat-chart" id="chart_times" width="100%" height="40"></canvas>
        </div>

        {% for key, item in survey.statistics.detailed %}
            <div class="survey_stat-item">
                <h4>{{ item.title }}</h4>
                <canvas class="survey_stat-chart" id="chart_{{ key }}" width="100%" height="15"></canvas>
            </div>
        {% endfor %}

        <style>
        </style>

    </div>
{% endblock %}

{% block stylesheets %}

{% endblock %}
{% block javascripts %}
    <script src="https://cdnjs.cloudflare.com/ajax/libs/Chart.js/2.7.2/Chart.min.js"></script>
    <script src="{{ asset('assets/js/functions.js') }}"></script>
    <script src="{{ asset('assets/js/prototypes.js') }}"></script>
    <script src="{{ asset('assets/js/class/color.js') }}"></script>
    <script>

        var statistics = {{ survey.statistics|json_encode(constant('JSON_UNESCAPED_UNICODE'))|raw }};

        var color = Color.generateHEXColor();

        console.log(array_keys(statistics.general.times));
        console.log(array_values(statistics.general.times));

        new Chart(document.getElementById('chart_times').getContext('2d'), {
            type: 'line',
            data: {
                labels: array_keys(statistics.general.times),
                datasets: [{
                    label: 'Количество ответов',
                    backgroundColor: color,
                    borderColor: color,
                    fill: false,
                    data: array_values(statistics.general.times)
                }]
            },
            options: {
                legend: { display: false },
                scales: {
                    yAxes: [{
                        ticks: {
                            min: array_values(statistics.general.times).min() - 1,
                            max: array_values(statistics.general.times).max() + 1,
                            stepSize: 1,
                            callback: function (value) { if (Number.isInteger(value)) { return value; } },
                        }
                    }]
                }
            }
        });

        Object.keys(statistics.detailed).map(function(key)
        {
            var item = statistics.detailed[key];

            // console.log(item);

            var chart = {
                canvas: document.getElementById('chart_' + key).getContext('2d'),
                height: 15,
                type: 'bar',
                labels: [],
                datasets: [],
                options: []
            };

            if (typeof item.data === 'object')
            {
                chart.labels = objectGetValuesByKey(item.data, "title");
                chart.height = 40;

                chart.datasets = [{
                    label: 'Количество ответов',
                    backgroundColor: Color.getColorsArray(Color.generateHEXColor, chart.labels.length),
                    borderWidth: 1,
                    data: objectGetValuesByKey(item.data, "data")
                }];

                chart.options = {
                    legend: { display: false },
                    scales: {
                        yAxes: [{
                            ticks: {
                                stepSize: 1,
                                beginAtZero: true,
                            }
                        }]
                    }
                };
            }
            else
            {
                chart.type = 'horizontalBar';

                chart.datasets = [{
                    label: 'Количество ответов',
                    backgroundColor: Color.generateHEXColor(),
                    data: [item.data]
                }];

                chart.options = {
                    responsive: true,
                    maintainAspectRatio: false,
                    legend: { display: false },
                    scales: {
                        xAxes: [{
                            ticks: {
                                beginAtZero: true,
                                stepSize: 1,
                                max: statistics.general.answers
                            }
                        }]
                    }
                };
            }

            console.log(chart);

            chart.canvas.canvas.height = chart.height;

            new Chart(chart.canvas, {
                type: chart.type,
                data: {
                    labels: chart.labels,
                    datasets: chart.datasets
                },
                options: chart.options,
            });
        });

    </script>
{% endblock %}